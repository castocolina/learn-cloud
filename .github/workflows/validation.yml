name: SvelteKit Validation
on:
  push:
    branches: 
      - "master"
      - "feature/**"
  pull_request:
    branches: 
      - "master"
      - "feature/**"
  workflow_dispatch:

jobs:
  # Common setup - installs dependencies once
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  # Parallel validations - SvelteKit and script validation
  validate:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Continue with other validations even if one fails
      matrix:
        validation: [svelte-check, svelte-lint, bash, python, content]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Python (for script validation)
        if: matrix.validation == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Run SvelteKit Check
        if: matrix.validation == 'svelte-check'
        run: pnpm run check

      - name: Run SvelteKit Lint
        if: matrix.validation == 'svelte-lint'
        run: pnpm run lint

      - name: Run Bash Validation
        if: matrix.validation == 'bash'
        run: make validate-bash

      - name: Run Python Validation
        if: matrix.validation == 'python'
        run: make validate-python

      - name: Run Content Validation
        if: matrix.validation == 'content'
        run: make content-validate

  # Python testing job - runs in parallel with other validations
  test-python:
    needs: setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml pytest

      - name: Run Python tests
        run: make test-python-unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-test-results
          path: |
            tmp/
            !tmp/pycache/